generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("VITE_DATABASE_URL")
  directUrl = env("VITE_DIRECT_URL")
}

model achievements {
  id    Int  @id
  ach0  Int? @default(0)
  ach1  Int? @default(0)
  ach2  Int? @default(0)
  ach3  Int? @default(0)
  ach4  Int? @default(0)
  ach5  Int? @default(0)
  ach6  Int? @default(0)
  ach7  Int? @default(0)
  ach8  Int? @default(0)
  ach9  Int? @default(0)
  ach10 Int? @default(0)
  ach11 Int? @default(0)
  ach12 Int? @default(0)
  ach13 Int? @default(0)
  ach14 Int? @default(0)
  ach15 Int? @default(0)
  ach16 Int? @default(0)
  ach17 Int? @default(0)
  ach18 Int? @default(0)
  ach19 Int? @default(0)
  ach20 Int? @default(0)
  ach21 Int? @default(0)
  ach22 Int? @default(0)
  ach23 Int? @default(0)
  ach24 Int? @default(0)
  ach25 Int? @default(0)
  ach26 Int? @default(0)
  ach27 Int? @default(0)
  ach28 Int? @default(0)
  ach29 Int? @default(0)
  ach30 Int? @default(0)
  ach31 Int? @default(0)
  ach32 Int? @default(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cafe_accepted {
  cafe_id      Int
  character_id Int

  @@ignore
}

model cafebonus {
  id        Int @id @default(autoincrement())
  time_req  Int
  item_type Int
  item_id   Int
  quantity  Int
}

model characters {
  id                                                             Int                  @id @default(autoincrement())
  user_id                                                        BigInt?
  is_female                                                      Boolean?
  is_new_character                                               Boolean?
  name                                                           String?              @db.VarChar(15)
  unk_desc_string                                                String?              @db.VarChar(31)
  gr                                                             Int?
  hrp                                                            Int?
  weapon_type                                                    Int?
  last_login                                                     Int?
  savedata                                                       Bytes?
  decomyset                                                      Bytes?
  hunternavi                                                     Bytes?
  otomoairou                                                     Bytes?
  partner                                                        Bytes?
  platebox                                                       Bytes?
  platedata                                                      Bytes?
  platemyset                                                     Bytes?
  rengokudata                                                    Bytes?
  savemercenary                                                  Bytes?
  restrict_guild_scout                                           Boolean              @default(false)
  minidata                                                       Bytes?
  gacha_items                                                    Bytes?
  daily_time                                                     DateTime?            @db.Timestamptz(6)
  house_info                                                     Bytes?
  login_boost                                                    Bytes?
  skin_hist                                                      Bytes?
  kouryou_point                                                  Int?
  gcp                                                            Int?
  guild_post_checked                                             DateTime             @default(now()) @db.Timestamptz(6)
  time_played                                                    Int                  @default(0)
  weapon_id                                                      Int                  @default(0)
  scenariodata                                                   Bytes?
  savefavoritequest                                              Bytes?
  friends                                                        String               @default("")
  blocked                                                        String               @default("")
  deleted                                                        Boolean              @default(false)
  cafe_time                                                      Int?                 @default(0)
  netcafe_points                                                 Int?                 @default(0)
  boost_time                                                     DateTime?            @db.Timestamptz(6)
  cafe_reset                                                     DateTime?            @db.Timestamptz(6)
  bonus_quests                                                   Int                  @default(0)
  daily_quests                                                   Int                  @default(0)
  promo_points                                                   Int                  @default(0)
  rasta_id                                                       Int?
  pact_id                                                        Int?
  stampcard                                                      Int                  @default(0)
  mezfes                                                         Bytes?
  guild_applications_guild_applications_actor_idTocharacters     guild_applications[] @relation("guild_applications_actor_idTocharacters")
  guild_applications_guild_applications_character_idTocharacters guild_applications[] @relation("guild_applications_character_idTocharacters")
  mail_mail_recipient_idTocharacters                             mail[]               @relation("mail_recipient_idTocharacters")
  mail_mail_sender_idTocharacters                                mail[]               @relation("mail_sender_idTocharacters")
}

model distribution {
  id               Int       @id @default(autoincrement())
  character_id     Int?
  type             Int
  deadline         DateTime? @db.Timestamptz(6)
  event_name       String    @default("GM Gift!")
  description      String    @default("~C05You received a gift!")
  times_acceptable Int       @default(1)
  min_hr           Int       @default(65535)
  max_hr           Int       @default(65535)
  min_sr           Int       @default(65535)
  max_sr           Int       @default(65535)
  min_gr           Int       @default(65535)
  max_gr           Int       @default(65535)
  data             Bytes
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model distributions_accepted {
  distribution_id Int?
  character_id    Int?

  @@ignore
}

model events {
  id         Int        @id @default(autoincrement())
  event_type event_type
  start_time DateTime   @default(now()) @db.Timestamptz(6)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model feature_weapon {
  start_time DateTime @db.Timestamptz(6)
  featured   Int

  @@ignore
}

model festa_prizes {
  id        Int        @id @default(autoincrement())
  type      prize_type
  tier      Int
  souls_req Int
  item_id   Int
  num_item  Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model festa_prizes_accepted {
  prize_id     Int
  character_id Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model festa_registrations {
  guild_id Int
  team     festival_colour

  @@ignore
}

model festa_trials {
  id         Int @id @default(autoincrement())
  objective  Int
  goal_id    Int
  times_req  Int
  locale_req Int @default(0)
  reward     Int
}

model fpoint_items {
  id         Int  @id @default(autoincrement())
  item_type  Int?
  item_id    Int?
  quantity   Int?
  fpoints    Int?
  trade_type Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model gacha_box {
  gacha_id     Int?
  entry_id     Int?
  character_id Int?

  @@ignore
}

model gacha_entries {
  id              Int  @id @default(autoincrement())
  gacha_id        Int?
  entry_type      Int?
  item_type       Int?
  item_number     Int?
  item_quantity   Int?
  weight          Int?
  rarity          Int?
  rolls           Int?
  frontier_points Int?
  daily_limit     Int?
}

model gacha_items {
  id        Int  @id @default(autoincrement())
  entry_id  Int?
  item_type Int?
  item_id   Int?
  quantity  Int?
}

model gacha_shop {
  id            Int      @id @default(autoincrement())
  min_gr        Int?
  min_hr        Int?
  name          String?
  url_banner    String?
  url_feature   String?
  url_thumbnail String?
  wide          Boolean?
  recommended   Boolean?
  gacha_type    Int?
  hidden        Boolean?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model gacha_stepup {
  gacha_id     Int?
  step         Int?
  character_id Int?

  @@ignore
}

model gook {
  id    Int    @id @default(autoincrement())
  gook0 Bytes?
  gook1 Bytes?
  gook2 Bytes?
  gook3 Bytes?
  gook4 Bytes?
}

model guild_adventures {
  id           Int    @id @default(autoincrement())
  guild_id     Int
  destination  Int
  charge       Int    @default(0)
  depart       Int
  return       Int
  collected_by String @default("")
}

model guild_alliances {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(24)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  parent_id  Int
  sub1_id    Int?
  sub2_id    Int?
}

model guild_applications {
  id                                                     Int                    @id @default(autoincrement())
  guild_id                                               Int
  character_id                                           Int
  actor_id                                               Int
  application_type                                       guild_application_type
  created_at                                             DateTime               @default(now()) @db.Timestamptz(6)
  characters_guild_applications_actor_idTocharacters     characters             @relation("guild_applications_actor_idTocharacters", fields: [actor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  characters_guild_applications_character_idTocharacters characters             @relation("guild_applications_character_idTocharacters", fields: [character_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  guilds                                                 guilds                 @relation(fields: [guild_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([guild_id, character_id], map: "guild_application_character_id")
  @@index([application_type], map: "guild_application_type_index")
}

model guild_characters {
  id               Int         @id @default(autoincrement())
  guild_id         BigInt?
  character_id     BigInt?     @unique(map: "guild_character_unique_index")
  joined_at        DateTime?   @default(now()) @db.Timestamptz(6)
  avoid_leadership Boolean     @default(false)
  order_index      Int         @default(1)
  recruiter        Boolean     @default(false)
  souls            Int?        @default(0)
  rp_today         Int?        @default(0)
  rp_yesterday     Int?        @default(0)
}

model guild_hunts {
  id          Int     @id @default(autoincrement())
  guild_id    Int
  host_id     Int
  destination Int
  level       Int
  return      Int
  acquired    Boolean @default(false)
  claimed     Boolean @default(false)
  hunters     String  @default("")
  treasure    String  @default("")
  hunt_data   Bytes
  cats_used   String
}

model guild_meals {
  id         Int       @id @default(autoincrement())
  guild_id   Int
  meal_id    Int
  level      Int
  created_at DateTime? @db.Timestamptz(6)
}

model guild_posts {
  id         Int      @id @default(autoincrement())
  guild_id   Int
  author_id  Int
  post_type  Int
  stamp_id   Int
  title      String
  body       String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  liked_by   String   @default("")
}

model guilds {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(24)
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  leader_id          Int
  main_motto         Int?                 @default(0)
  rank_rp            Int                  @default(0)
  comment            String               @default("") @db.VarChar(255)
  icon               Bytes?
  sub_motto          Int?                 @default(0)
  item_box           Bytes?
  event_rp           Int                  @default(0)
  pugi_name_1        String?              @default("") @db.VarChar(12)
  pugi_name_2        String?              @default("") @db.VarChar(12)
  pugi_name_3        String?              @default("") @db.VarChar(12)
  recruiting         Boolean              @default(true)
  pugi_outfit_1      Int                  @default(0)
  pugi_outfit_2      Int                  @default(0)
  pugi_outfit_3      Int                  @default(0)
  pugi_outfits       Int                  @default(0)
  guild_applications guild_applications[]
}

model launcher_system {
  id       Int     @id
  maint_jp Boolean
  maint_us Boolean
  maint_eu Boolean
  update   Boolean
}

model mail {
  id                                       Int        @id @default(autoincrement())
  sender_id                                Int
  recipient_id                             Int
  subject                                  String     @default("") @db.VarChar
  body                                     String     @default("") @db.VarChar
  read                                     Boolean    @default(false)
  attached_item_received                   Boolean    @default(false)
  attached_item                            Int?
  attached_item_amount                     Int        @default(1)
  is_guild_invite                          Boolean    @default(false)
  created_at                               DateTime   @default(now()) @db.Timestamptz(6)
  deleted                                  Boolean    @default(false)
  locked                                   Boolean    @default(false)
  characters_mail_recipient_idTocharacters characters @relation("mail_recipient_idTocharacters", fields: [recipient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  characters_mail_sender_idTocharacters    characters @relation("mail_sender_idTocharacters", fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([recipient_id, deleted, created_at(sort: Desc), id(sort: Desc)], map: "mail_recipient_deleted_created_id_index")
}

model rengoku_score {
  character_id  Int  @id
  max_stages_mp Int?
  max_points_mp Int?
  max_stages_sp Int?
  max_points_sp Int?
}

model shop_items {
  shop_type    Int?
  shop_id      Int?
  id           Int  @id @default(autoincrement())
  item_id      Int?
  cost         Int?
  quantity     Int?
  min_hr       Int?
  min_sr       Int?
  min_gr       Int?
  store_level  Int?
  max_quantity Int?
  road_floors  Int?
  road_fatalis Int?
}

model stamps {
  character_id Int       @id
  hl_total     Int?      @default(0)
  hl_redeemed  Int?      @default(0)
  hl_next      DateTime? @db.Timestamptz(6)
  ex_total     Int?      @default(0)
  ex_redeemed  Int?      @default(0)
  ex_next      DateTime? @db.Timestamptz(6)
}

model user_binary {
  id              Int     @id @default(autoincrement())
  type2           Bytes?
  type3           Bytes?
  house_tier      Bytes?
  house_state     Int?
  house_password  String?
  house_data      Bytes?
  house_furniture Bytes?
  bookshelf       Bytes?
  gallery         Bytes?
  tore            Bytes?
  garden          Bytes?
  mission         Bytes?
}

model users {
  id              Int          @id @default(autoincrement())
  username        String       @unique
  password        String
  item_box        Bytes?
  rights          Int          @default(12)
  last_character  Int?         @default(0)
  last_login      DateTime?    @db.Timestamptz(6)
  return_expires  DateTime?    @db.Timestamptz(6)
  gacha_premium   Int?
  gacha_trial     Int?
  frontier_points Int?
}

model warehouse {
  character_id Int     @id
  item0        Bytes?
  item1        Bytes?
  item2        Bytes?
  item3        Bytes?
  item4        Bytes?
  item5        Bytes?
  item6        Bytes?
  item7        Bytes?
  item8        Bytes?
  item9        Bytes?
  item10       Bytes?
  item0name    String?
  item1name    String?
  item2name    String?
  item3name    String?
  item4name    String?
  item5name    String?
  item6name    String?
  item7name    String?
  item8name    String?
  item9name    String?
  equip0       Bytes?
  equip1       Bytes?
  equip2       Bytes?
  equip3       Bytes?
  equip4       Bytes?
  equip5       Bytes?
  equip6       Bytes?
  equip7       Bytes?
  equip8       Bytes?
  equip9       Bytes?
  equip10      Bytes?
  equip0name   String?
  equip1name   String?
  equip2name   String?
  equip3name   String?
  equip4name   String?
  equip5name   String?
  equip6name   String?
  equip7name   String?
  equip8name   String?
  equip9name   String?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model login_boost {
  char_id    Int?
  week_req   Int?
  expiration DateTime? @db.Timestamptz(6)
  reset      DateTime? @db.Timestamptz(6)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model servers {
  server_id         Int
  season            Int
  current_players   Int
  world_name        String?
  world_description String?
  land              Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model shop_items_bought {
  character_id Int?
  shop_item_id Int?
  bought       Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model sign_sessions {
  user_id   Int
  char_id   Int?
  token     String @db.VarChar(16)
  server_id Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model titles {
  id          Int
  char_id     Int
  unlocked_at DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)

  @@ignore
}

enum event_type {
  festa
  diva
  vs
  mezfes
}

enum festival_colour {
  none
  red
  blue
}

enum guild_application_type {
  applied
  invited
}

enum prize_type {
  personal
  guild
}
