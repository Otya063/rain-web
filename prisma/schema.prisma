generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model achievements {
    id    Int  @id
    ach0  Int? @default(0)
    ach1  Int? @default(0)
    ach2  Int? @default(0)
    ach3  Int? @default(0)
    ach4  Int? @default(0)
    ach5  Int? @default(0)
    ach6  Int? @default(0)
    ach7  Int? @default(0)
    ach8  Int? @default(0)
    ach9  Int? @default(0)
    ach10 Int? @default(0)
    ach11 Int? @default(0)
    ach12 Int? @default(0)
    ach13 Int? @default(0)
    ach14 Int? @default(0)
    ach15 Int? @default(0)
    ach16 Int? @default(0)
    ach17 Int? @default(0)
    ach18 Int? @default(0)
    ach19 Int? @default(0)
    ach20 Int? @default(0)
    ach21 Int? @default(0)
    ach22 Int? @default(0)
    ach23 Int? @default(0)
    ach24 Int? @default(0)
    ach25 Int? @default(0)
    ach26 Int? @default(0)
    ach27 Int? @default(0)
    ach28 Int? @default(0)
    ach29 Int? @default(0)
    ach30 Int? @default(0)
    ach31 Int? @default(0)
    ach32 Int? @default(0)
}

model blog {
    id            Int     @id @default(autoincrement())
    title         String  @db.VarChar(255)
    thumbnail_url String? @db.VarChar(255)
    discord_name  String  @db.VarChar(255)
    avatar_url    String  @db.VarChar(255)
    content       String?
    created       Int
    category      String  @db.VarChar(255)
}

model bounty {
    id           Int     @id @default(autoincrement())
    title        String  @db.VarChar(255)
    explain      String? @db.VarChar(255)
    solo_point   Int
    multi_point  Int
    solo_ticket  Int
    multi_ticket Int
    cooldown     Int
}

model cafe_accepted {
    cafe_id      Int
    character_id Int

    @@id([cafe_id, character_id])
}

model cafebonus {
    id        Int @id @default(autoincrement())
    time_req  Int
    item_type Int
    item_id   Int
    quantity  Int
}

model characters {
    id                                                             Int                  @id @default(autoincrement())
    user_id                                                        Int?
    is_female                                                      Boolean?
    is_new_character                                               Boolean?
    name                                                           String?              @db.VarChar(15)
    unk_desc_string                                                String?              @db.VarChar(31)
    gr                                                             Int?
    hrp                                                            Int?
    weapon_type                                                    Int?
    last_login                                                     Int?
    savedata                                                       Bytes?
    decomyset                                                      Bytes?
    hunternavi                                                     Bytes?
    otomoairou                                                     Bytes?
    partner                                                        Bytes?
    platebox                                                       Bytes?
    platedata                                                      Bytes?
    platemyset                                                     Bytes?
    rengokudata                                                    Bytes?
    savemercenary                                                  Bytes?
    restrict_guild_scout                                           Boolean              @default(false)
    minidata                                                       Bytes?
    gacha_items                                                    Bytes?
    daily_time                                                     DateTime?            @db.Timestamptz(6)
    house_info                                                     Bytes?
    login_boost                                                    Bytes?
    skin_hist                                                      Bytes?
    kouryou_point                                                  Int?
    gcp                                                            Int?
    guild_post_checked                                             DateTime             @default(now()) @db.Timestamptz(6)
    time_played                                                    Int                  @default(0)
    weapon_id                                                      Int                  @default(0)
    scenariodata                                                   Bytes?
    savefavoritequest                                              Bytes?
    friends                                                        String               @default("")
    blocked                                                        String               @default("")
    deleted                                                        Boolean              @default(false)
    boost_time                                                     DateTime?            @db.Timestamptz(6)
    netcafe_points                                                 Int?                 @default(0)
    cafe_reset                                                     DateTime?            @db.Timestamptz(6)
    bonus_quests                                                   Int                  @default(0)
    daily_quests                                                   Int                  @default(0)
    promo_points                                                   Int                  @default(0)
    rasta_id                                                       Int?
    pact_id                                                        Int?
    stampcard                                                      Int                  @default(0)
    mezfes                                                         Bytes?
    cafe_time                                                      Int?                 @default(0)
    users                                                          users?               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
    discord                                                        discord?
    distribution                                                   distribution[]
    guild_applications_guild_applications_actor_idTocharacters     guild_applications[] @relation("guild_applications_actor_idTocharacters")
    guild_applications_guild_applications_character_idTocharacters guild_applications[] @relation("guild_applications_character_idTocharacters")
    guild_applications                                             guild_applications[]
    guild_characters                                               guild_characters?
    mail                                                           mail[]
    rengoku_score                                                  rengoku_score?
    shop_items_bought                                              shop_items_bought[]
    warehouse                                                      warehouse?
}

model discord {
    id                 Int        @id @default(autoincrement())
    char_id            Int        @unique
    discord_id         String     @unique(map: "discord_unique") @db.VarChar(255)
    is_male            Boolean?   @default(true)
    bounty             Int        @default(0)
    road_champion      Boolean    @default(false)
    rain_demolizer     Boolean    @default(false)
    bounty_champion    Boolean    @default(false)
    bounty_master      Boolean    @default(false)
    bounty_expert      Boolean    @default(false)
    gacha              Int        @default(0)
    pity               Int        @default(0)
    boostcd            Int        @default(0)
    newbie             Boolean    @default(true)
    latest_bounty      String     @default("None") @db.VarChar(10)
    latest_bounty_time Int        @default(0)
    transfercd         Int?       @default(0)
    title              Int?       @default(0)
    gold               Int?       @default(0)
    silver             Int?       @default(0)
    bronze             Int?       @default(0)
    characters         characters @relation(fields: [char_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "characters_fk")
}

model discord_register {
    id         Int       @id @default(autoincrement())
    discord_id String?   @unique @db.VarChar(32)
    user_id    Int?      @unique
    created_at DateTime? @default(now()) @db.Timestamp(6)
    users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "users_fk")
}

model distribution {
    id               Int         @id @default(autoincrement())
    character_id     Int?
    type             Int
    deadline         DateTime?   @db.Timestamptz(6)
    event_name       String      @default("GM Gift!")
    description      String      @default("~C05You received a gift!")
    times_acceptable Int         @default(1)
    min_hr           Int         @default(65535)
    max_hr           Int         @default(65535)
    min_sr           Int         @default(65535)
    max_sr           Int         @default(65535)
    min_gr           Int         @default(65535)
    max_gr           Int         @default(65535)
    data             Bytes
    bot              Boolean     @default(false)
    characters       characters? @relation(fields: [character_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model distributions_accepted {
    distribution_id Int
    character_id    Int

    @@id([character_id, distribution_id])
}

model event_quests {
    id          Int  @id @default(autoincrement())
    max_players Int?
    quest_type  Int
    quest_id    Int
    mark        Int?
}

model events {
    id         Int        @id @default(autoincrement())
    event_type event_type
    start_time DateTime   @default(now()) @db.Timestamptz(6)
}

model feature_weapon {
    start_time DateTime @db.Timestamptz(6)
    featured   Int

    @@id([start_time, featured])
}

model festa_prizes {
    id        Int        @id @default(autoincrement())
    type      prize_type
    tier      Int
    souls_req Int
    item_id   Int
    num_item  Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model festa_prizes_accepted {
    prize_id     Int
    character_id Int

    @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model festa_registrations {
    guild_id Int
    team     festival_colour

    @@ignore
}

model festa_trials {
    id         Int @id @default(autoincrement())
    objective  Int
    goal_id    Int
    times_req  Int
    locale_req Int @default(0)
    reward     Int
}

model fpoint_items {
    id         Int  @id @default(autoincrement())
    item_type  Int?
    item_id    Int?
    quantity   Int?
    fpoints    Int?
    trade_type Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model gacha_box {
    gacha_id     Int?
    entry_id     Int?
    character_id Int?

    @@ignore
}

model gacha_entries {
    id              Int     @id @default(autoincrement())
    gacha_id        Int?
    entry_type      Int?
    item_type       Int?
    item_number     Int?
    item_quantity   Int?
    weight          Int?
    rarity          Int?
    rolls           Int?
    frontier_points Int?
    daily_limit     Int?
    name            String?
}

model gacha_items {
    id        Int  @id @default(autoincrement())
    entry_id  Int?
    item_type Int?
    item_id   Int?
    quantity  Int?
}

model gacha_shop {
    id            Int      @id @default(autoincrement())
    min_gr        Int?
    min_hr        Int?
    name          String?
    url_banner    String?
    url_feature   String?
    url_thumbnail String?
    wide          Boolean?
    recommended   Boolean?
    gacha_type    Int?
    hidden        Boolean?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model gacha_stepup {
    gacha_id     Int?
    step         Int?
    character_id Int?

    @@ignore
}

model goocoo {
    id      Int    @id(map: "gook_pkey") @default(autoincrement())
    goocoo0 Bytes?
    goocoo1 Bytes?
    goocoo2 Bytes?
    goocoo3 Bytes?
    goocoo4 Bytes?
}

model guild_adventures {
    id           Int    @id @default(autoincrement())
    guild_id     Int
    destination  Int
    charge       Int    @default(0)
    depart       Int
    return       Int
    collected_by String @default("")
}

model guild_alliances {
    id         Int      @id @default(autoincrement())
    name       String   @db.VarChar(24)
    created_at DateTime @default(now()) @db.Timestamptz(6)
    parent_id  Int
    sub1_id    Int?
    sub2_id    Int?
}

model guild_applications {
    id                                                     Int                    @id @default(autoincrement())
    guild_id                                               Int
    character_id                                           Int
    actor_id                                               Int
    application_type                                       guild_application_type
    created_at                                             DateTime               @default(now()) @db.Timestamptz(6)
    characters_guild_applications_actor_idTocharacters     characters             @relation("guild_applications_actor_idTocharacters", fields: [actor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "guild_applications_actor_id_fkey1")
    characters_guild_applications_character_idTocharacters characters             @relation("guild_applications_character_idTocharacters", fields: [character_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "guild_applications_character_id_fkey1")
    guilds                                                 characters             @relation(fields: [guild_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "guild_applications_guild_id_fkey1")

    @@unique([guild_id, character_id], map: "guild_application_character_id")
    @@index([application_type], map: "guild_application_type_index")
}

model guild_characters {
    id               Int         @id @default(autoincrement())
    guild_id         Int?
    character_id     Int?        @unique(map: "guild_character_unique_index")
    joined_at        DateTime?   @default(now()) @db.Timestamptz(6)
    avoid_leadership Boolean     @default(false)
    order_index      Int         @default(1)
    recruiter        Boolean     @default(false)
    souls            Int?        @default(0)
    rp_today         Int?        @default(0)
    rp_yesterday     Int?        @default(0)
    tower_mission_1  Int?
    tower_mission_2  Int?
    tower_mission_3  Int?
    box_claimed      DateTime?   @default(now()) @db.Timestamptz(6)
    treasure_hunt    Int?
    characters       characters? @relation(fields: [character_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
    guilds           guilds?     @relation(fields: [guild_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model guild_hunts {
    id          Int      @id @default(autoincrement())
    guild_id    Int
    host_id     Int
    destination Int
    level       Int
    return      Int
    acquired    Boolean  @default(false)
    claimed     Boolean  @default(false)
    hunters     String   @default("")
    treasure    String   @default("")
    hunt_data   Bytes
    cats_used   String
    start       DateTime @default(now()) @db.Timestamptz(6)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model guild_hunts_claimed {
    hunt_id      Int
    character_id Int

    @@ignore
}

model guild_meals {
    id         Int       @id @default(autoincrement())
    guild_id   Int
    meal_id    Int
    level      Int
    created_at DateTime? @db.Timestamptz(6)
}

model guild_posts {
    id         Int      @id @default(autoincrement())
    guild_id   Int
    author_id  Int
    post_type  Int
    stamp_id   Int
    title      String
    body       String
    created_at DateTime @default(now()) @db.Timestamptz(6)
    liked_by   String   @default("")
}

model guilds {
    id                 Int                @id @default(autoincrement())
    name               String?            @db.VarChar(24)
    created_at         DateTime?          @default(now()) @db.Timestamptz(6)
    leader_id          Int
    main_motto         Int?               @default(0)
    rank_rp            Int                @default(0)
    comment            String             @default("") @db.VarChar(255)
    icon               Bytes?
    sub_motto          Int?               @default(0)
    item_box           Bytes?
    event_rp           Int                @default(0)
    pugi_name_1        String?            @default("") @db.VarChar(12)
    pugi_name_2        String?            @default("") @db.VarChar(12)
    pugi_name_3        String?            @default("") @db.VarChar(12)
    recruiting         Boolean            @default(true)
    pugi_outfit_1      Int                @default(0)
    pugi_outfit_2      Int                @default(0)
    pugi_outfit_3      Int                @default(0)
    pugi_outfits       Int                @default(0)
    tower_mission_page Int?               @default(1)
    tower_rp           Int?               @default(0)
    guild_characters   guild_characters[]
}

model kill_logs {
    id           Int      @id @default(autoincrement())
    character_id Int
    monster      Int
    quantity     Int
    timestamp    DateTime @db.Timestamptz(6)
}

model launcher_banner {
    id         Int     @id @default(autoincrement())
    bnr_name   String  @db.VarChar(255)
    bnr_url    String? @db.VarChar(255)
    ja_img_src String  @db.VarChar(255)
    en_img_src String  @db.VarChar(255)
}

model launcher_info {
    id         Int      @id @default(autoincrement())
    title      String   @db.VarChar(255)
    url        String?  @db.VarChar(255)
    type       String
    created_at DateTime @default(now()) @db.Timestamptz(6)
}

model launcher_system {
    id          Int      @id
    RainJP      Boolean
    RainUS      Boolean
    RainEU      Boolean
    update      Boolean
    debug       Boolean
    client_data String[]
    rain_admins String[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model login_boost {
    char_id    Int?
    week_req   Int?
    expiration DateTime? @db.Timestamptz(6)
    reset      DateTime? @db.Timestamptz(6)

    @@ignore
}

model mail {
    id                     Int        @id @default(autoincrement())
    sender_id              Int
    recipient_id           Int
    subject                String     @default("") @db.VarChar
    body                   String     @default("") @db.VarChar
    read                   Boolean    @default(false)
    attached_item_received Boolean    @default(false)
    attached_item          Int?
    attached_item_amount   Int        @default(1)
    is_guild_invite        Boolean    @default(false)
    created_at             DateTime   @default(now()) @db.Timestamptz(6)
    deleted                Boolean    @default(false)
    locked                 Boolean    @default(false)
    is_sys_message         Boolean?   @default(false)
    characters             characters @relation(fields: [recipient_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([recipient_id, deleted, created_at(sort: Desc), id(sort: Desc)], map: "mail_recipient_deleted_created_id_index")
}

model mezfes {
    id                 Int     @id @default(autoincrement())
    discord_id         String? @db.VarChar(255)
    panic_honey        Int
    guuku_scoop        Int
    dokkan_battle_cats Int
    nyanrendo          Int
    uruki_pachinko     Int
    total              Int
}

model raviregister {
    id           Int  @id @default(autoincrement())
    refid        Int
    nextravi     Int
    ravistarted  Int?
    raviposttime Int?
    ravitype     Int?
    maxplayers   Int?
    ravikilled   Int?
    carvequest   Int?
    register1    Int?
    register2    Int?
    register3    Int?
    register4    Int?
    register5    Int?
}

model ravistate {
    id               Int  @id @default(autoincrement())
    refid            Int
    phase1hp         Int
    phase2hp         Int?
    phase3hp         Int?
    phase4hp         Int?
    phase5hp         Int?
    phase6hp         Int?
    phase7hp         Int?
    phase8hp         Int?
    phase9hp         Int?
    unknown1         Int?
    unknown2         Int?
    unknown3         Int?
    unknown4         Int?
    unknown5         Int?
    unknown6         Int?
    unknown7         Int?
    unknown8         Int?
    unknown9         Int?
    unknown10        Int?
    unknown11        Int?
    unknown12        Int?
    unknown13        Int?
    unknown14        Int?
    unknown15        Int?
    unknown16        Int?
    unknown17        Int?
    unknown18        Int?
    unknown19        Int?
    unknown20        Int?
    damagemultiplier Int?
}

model ravisupport {
    id        Int  @id @default(autoincrement())
    refid     Int
    support1  Int
    support2  Int?
    support3  Int?
    support4  Int?
    support5  Int?
    support6  Int?
    support7  Int?
    support8  Int?
    support9  Int?
    support10 Int?
    support11 Int?
    support12 Int?
    support13 Int?
    support14 Int?
    support15 Int?
    support16 Int?
    support17 Int?
    support18 Int?
    support19 Int?
    support20 Int?
    support21 Int?
    support22 Int?
    support23 Int?
    support24 Int?
    support25 Int?
}

model rengoku_score {
    character_id  Int        @id
    max_stages_mp Int?
    max_points_mp Int?
    max_stages_sp Int?
    max_points_sp Int?
    characters    characters @relation(fields: [character_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model scenario_counter {
    id          Int     @id @default(autoincrement())
    scenario_id Decimal @db.Decimal
    category_id Decimal @db.Decimal
}

model servers {
    server_id         Int
    season            Int?
    current_players   Int
    land              Int
    world_name        String
    world_description String

    @@id([server_id, current_players, land, world_name, world_description])
}

model shop_items {
    shop_type    Int
    shop_id      Int
    id           Int @id @default(autoincrement())
    item_id      Int
    cost         Int
    quantity     Int
    min_hr       Int
    min_sr       Int
    min_gr       Int
    store_level  Int
    max_quantity Int
    road_floors  Int
    road_fatalis Int
}

model shop_items_bought {
    character_id Int
    shop_item_id Int
    bought       Int
    characters   characters @relation(fields: [character_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "shop_item_state_char_id_fkey")

    @@id([character_id, shop_item_id, bought], map: "shop_item_state_pkey")
    @@unique([character_id, shop_item_id], map: "shop_item_state_id_itemhash")
}

model sign_sessions {
    user_id   Int?
    char_id   Int?
    token     String  @db.VarChar(16)
    server_id Int?
    id        Int     @id @default(autoincrement())
    psn_id    String?
}

model stamps {
    character_id Int      @id
    hl_total     Int      @default(0)
    hl_redeemed  Int      @default(0)
    hl_next      DateTime @db.Timestamptz(6)
    ex_total     Int      @default(0)
    ex_redeemed  Int      @default(0)
    ex_next      DateTime @db.Timestamptz(6)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model submitted {
    id       Int     @default(autoincrement())
    bbq      String? @db.VarChar(255)
    type_b   Int     @default(1)
    title    String? @db.VarChar(255)
    cid      Int     @default(0)
    team     String? @default("none")
    cname    String? @default("none")
    uname    String? @default("none")
    t_submit Int
    avatar   String? @db.VarChar(255)
    url_i    String? @db.VarChar(255)

    @@ignore
}

model suspended_account {
    user_id   Int      @id
    username  String
    reason    Int
    until_at  DateTime @db.Timestamptz(6)
    permanent Boolean
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model titles {
    id          Int
    char_id     Int
    unlocked_at DateTime? @db.Timestamptz(6)
    updated_at  DateTime? @db.Timestamptz(6)

    @@ignore
}

model tower {
    char_id Int     @id
    tr      Int?
    trp     Int?
    tsp     Int?
    block1  Int?
    block2  Int?
    skills  String? @default("0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0")
    gems    String? @default("0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0")
}

model trend_weapons {
    weapon_id   Int  @id
    weapon_type Int
    count       Int? @default(0)
}

model user_binary {
    id              Int     @id @default(autoincrement())
    type2           Bytes?
    type3           Bytes?
    house_tier      Bytes?
    house_state     Int?
    house_password  String?
    house_data      Bytes?
    house_furniture Bytes?
    bookshelf       Bytes?
    gallery         Bytes?
    tore            Bytes?
    garden          Bytes?
    mission         Bytes?
}

model users {
    id                   Int               @id @default(autoincrement())
    username             String            @unique
    password             String
    rights               Int               @default(76)
    item_box             Bytes?
    last_character       Int?              @default(0)
    last_login           DateTime?         @db.Timestamptz(6)
    return_expires       DateTime?         @db.Timestamptz(6)
    gacha_premium        Int?
    gacha_trial          Int?
    frontier_points      Int?
    psn_id               String?
    wiiu_key             String?
    web_login_key        String?
    web_login_key_mobile String?
    characters           characters[]
    discord_register     discord_register?
}

model warehouse {
    character_id Int        @id
    item0        Bytes?
    item1        Bytes?
    item2        Bytes?
    item3        Bytes?
    item4        Bytes?
    item5        Bytes?
    item6        Bytes?
    item7        Bytes?
    item8        Bytes?
    item9        Bytes?
    item10       Bytes?
    item0name    String?
    item1name    String?
    item2name    String?
    item3name    String?
    item4name    String?
    item5name    String?
    item6name    String?
    item7name    String?
    item8name    String?
    item9name    String?
    equip0       Bytes?
    equip1       Bytes?
    equip2       Bytes?
    equip3       Bytes?
    equip4       Bytes?
    equip5       Bytes?
    equip6       Bytes?
    equip7       Bytes?
    equip8       Bytes?
    equip9       Bytes?
    equip10      Bytes?
    equip0name   String?
    equip1name   String?
    equip2name   String?
    equip3name   String?
    equip4name   String?
    equip5name   String?
    equip6name   String?
    equip7name   String?
    equip8name   String?
    equip9name   String?
    characters   characters @relation(fields: [character_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

enum event_type {
    festa
    diva
    vs
    mezfes
}

enum guild_application_type {
    applied
    invited
}

enum prize_type {
    personal
    guild
}

enum festival_colour {
    none
    red
    blue
}
